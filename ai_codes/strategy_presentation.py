import sys
sys.path.insert(0, r'E:\GitHub\CeVIOPy')
from ceviopy.cevio import Cevio
import time

def sasara_presentation():
    t = Cevio(mode="AI")
    
    # プレゼンテーション開始の挨拶
    t.speak("皆さん、こんにちは！わたし、さとうささらです！")
    time.sleep(1)
    t.speak("今日は、Googleが音声認識を無料提供する戦略的メリットについて、お話しします！")
    time.sleep(2)
    
    # スライド1: タイトル
    print("=== スライド1: タイトル ===")
    t.speak("タイトルは、「Googleが音声認識を無料提供する戦略的メリット」です。")
    t.speak("Google スピーチ レコグニション APIの無料戦略を分析していきますね！")
    input("次のスライドに進むにはEnterを押してください...")
    
    # スライド2: 概要
    print("=== スライド2: 概要 ===")
    t.speak("まず、概要から説明します。")
    t.speak("Googleは音声認識APIを無料で提供しています。")
    t.speak("一見すると収益に直結しない施策に見えますが、")
    t.speak("実は長期的な戦略投資なんです！")
    input("次のスライドに進むにはEnterを押してください...")
    
    # スライド3: 6つの戦略的メリット
    print("=== スライド3: 6つの戦略的メリット ===")
    t.speak("Googleには、6つの戦略的メリットがあります！")
    time.sleep(1)
    
    benefits = [
        "データ収集とAI改善",
        "有料版への誘導、いわゆるフリーミアム戦略",
        "エコシステムの拡大",
        "技術力のアピール",
        "開発者コミュニティの育成",
        "市場シェア確保"
    ]
    
    for i, benefit in enumerate(benefits, 1):
        t.speak(f"{i}番目は、{benefit}です。")
        time.sleep(0.5)
    
    t.speak("それでは、それぞれについて詳しく見ていきましょう！")
    input("次のスライドに進むにはEnterを押してください...")
    
    # 各メリットの詳細説明
    details = [
        {
            "title": "データ収集とAI改善",
            "explanation": [
                "まず1つ目は、データ収集とAI改善です。",
                "世界中のユーザーの音声データを収集できます。",
                "多様な言語や方言、アクセントを蓄積して、",
                "機械学習モデルの訓練データとして活用することで、",
                "音声認識精度を継続的に向上させているんです！"
            ]
        },
        {
            "title": "有料版への誘導（フリーミアム）",
            "explanation": [
                "2つ目は、フリーミアム戦略です！",
                "まず無料版で体験してもらって、",
                "商用や大規模利用の時に有料版へアップグレードを促すんです。",
                "Google Cloud スピーチ APIの売上拡大につながる、",
                "典型的なフリーミアム戦略ですね！"
            ]
        },
        {
            "title": "エコシステムの拡大",
            "explanation": [
                "3つ目は、エコシステムの拡大です。",
                "開発者が気軽に音声機能を実装できるようになって、",
                "Googleのテクノロジーに慣れ親しんでもらえます。",
                "そうすると、Google Cloudの他のサービスも使ってもらえる、",
                "技術的囲い込み効果があるんです！"
            ]
        },
        {
            "title": "技術力のアピール",
            "explanation": [
                "4つ目は、技術力のアピールです！",
                "Googleの音声認識技術の優秀さを実証できて、",
                "競合他社への技術的優位性を示せます。",
                "ブランド価値の向上や、",
                "技術リーダーシップの確立にもつながるんです！"
            ]
        },
        {
            "title": "開発者コミュニティの育成",
            "explanation": [
                "5つ目は、開発者コミュニティの育成です。",
                "音声技術を使ったイノベーションが促進されて、",
                "新しいサービスやアプリが生まれます。",
                "技術的パートナーを獲得できて、",
                "長期的な技術エコシステムを構築できるんです！"
            ]
        },
        {
            "title": "市場シェア確保",
            "explanation": [
                "最後、6つ目は市場シェア確保です！",
                "音声認識市場でのデファクトスタンダードを狙って、",
                "他社技術への流出を防止します。",
                "市場における優位性を確保することで、",
                "将来的な収益基盤を構築しているんです！"
            ]
        }
    ]
    
    for i, detail in enumerate(details, 4):
        print(f"=== スライド{i}: {detail['title']} ===")
        for explanation in detail["explanation"]:
            t.speak(explanation)
            time.sleep(0.8)
        input("次のスライドに進むにはEnterを押してください...")
    
    # まとめ
    print("=== スライド10: まとめ ===")
    t.speak("最後にまとめです！")
    time.sleep(1)
    t.speak("短期的収益よりも、長期的戦略投資が重要なんです。")
    t.speak("無料提供により、将来的な市場支配を狙っています。")
    t.speak("デベロッパー・エコシステムの構築が鍵となって、")
    t.speak("音声認識分野での覇権確立戦略なんです！")
    time.sleep(2)
    
    # 終了の挨拶
    t.speak("以上で、プレゼンテーションを終わります。")
    t.speak("ご清聴ありがとうございました！")
    t.speak("何かご質問があれば、お気軽にどうぞ！")

if __name__ == "__main__":
    print("さとうささらのプレゼンテーションを開始します！")
    sasara_presentation()