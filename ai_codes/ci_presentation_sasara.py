import sys
sys.path.insert(0, r'E:\GitHub\CeVIOPy')
from ceviopy.cevio import Cevio
import time

def ci_presentation():
    """CI構想プレゼンテーション - さとうささら音声合成版"""
    t = Cevio(mode="AI")
    
    print("=== CI構想プレゼンテーション開始 ===")
    print("操作方法: 各スライドでEnterキーを押すと次に進みます")
    print("終了したい場合は Ctrl+C を押してください")
    print()
    
    # === 導入 ===
    print("=== スライド1: タイトル ===")
    t.speak("皆さん、こんにちは！わたし、さとうささらです！")
    time.sleep(1)
    t.speak("今日は、修道25回生の皆さんがこれから取り組もうという「CI構想」について、")
    t.speak("わかりやすくお話しさせていただきます！")
    input("次のスライドに進むにはEnterを押してください...")
    
    print("=== スライド2: 自己紹介・導入 ===")
    t.speak("CIって何の略だと思いますか？")
    time.sleep(1)
    t.speak("AIじゃないんです。CI、つまり「コレクティブ インテリジェンス」、")
    t.speak("日本語で言うと「集団知性」のことなんです！")
    time.sleep(1)
    t.speak("実は今日のお話、ちょっと重いテーマも含んでいるんですが、")
    t.speak("でも大丈夫！一緒に楽しく学んでいきましょう！")
    input("次のスライドに進むにはEnterを押してください...")
    
    # === 第1部：人類の大きな学習体験 ===
    print("=== スライド3: 第1部タイトル ===")
    t.speak("それでは第1部、「人類の大きな学習体験」から始めましょう！")
    t.speak("沈没船から学ぶことがテーマです。")
    input("次のスライドに進むにはEnterを押してください...")
    
    print("=== スライド4: 地球という船 ===")
    t.speak("まず、今の地球の状況を、ちょっと面白い視点で見てみますね。")
    time.sleep(1)
    t.speak("想像してみてください。")
    t.speak("地球を「ちょっと失敗しちゃった船」だと考えてみます。")
    t.speak("この船に乗っているのは、私たち人類全員です。")
    time.sleep(1)
    t.speak("実は、この船、気候変動という大波にうまく対処できなくて、")
    t.speak("残念ながら沈没してしまいそうなんです。")
    input("次のスライドに進むにはEnterを押してください...")
    
    print("=== スライド5: でも、ここからが面白い！ ===")
    t.speak("「えー、大変！」って思いますよね？")
    time.sleep(1)
    t.speak("でも、ここからが面白いところなんです！")
    time.sleep(1)
    t.speak("普通なら、船が危険だとわかったら、")
    t.speak("乗船者みんなで協力して対処するはずですよね？")
    t.speak("でも実際はどうだったでしょうか？")
    input("次のスライドに進むにはEnterを押してください...")
    
    print("=== スライド6: 人類の反応パターン ===")
    t.speak("実際の人類の反応を見てみましょう。")
    time.sleep(1)
    t.speak("船の一部の人：「やばい、沈んじゃう！」")
    time.sleep(1)
    t.speak("別の場所の人：「え？本当に？実感ないなあ」")
    time.sleep(1)
    t.speak("また別の人：「大丈夫でしょ、今まで通りで」")
    time.sleep(2)
    t.speak("あれ？人類って、意外と連携するのが苦手だったんですね！")
    t.speak("これ、すごく興味深い発見じゃないですか？")
    input("次のスライドに進むにはEnterを押してください...")
    
    print("=== スライド7: 興味深い発見 ===")
    t.speak("人類の集団行動の特徴がわかりました！")
    t.speak("これって、実はとても勉強になる失敗例なんです。")
    t.speak("でも、失敗があるからこそ、次はもっと上手くできるんです！")
    input("次のスライドに進むにはEnterを押してください...")
    
    # === 第2部：なぜうまくいかなかったの？ ===
    print("=== スライド8: 第2部タイトル ===")
    t.speak("第2部では、「なぜうまくいかなかったの？」について考えてみましょう。")
    t.speak("従来の情報共有を振り返ってみますね。")
    input("次のスライドに進むにはEnterを押してください...")
    
    print("=== スライド9: 従来の方法 ===")
    t.speak("じゃあ、なぜ人類はこの大きなチャレンジで")
    t.speak("うまく連携できなかったんでしょう？")
    time.sleep(1)
    t.speak("今までの情報共有の方法を振り返ってみましょう。")
    time.sleep(1)
    t.speak("テレビで専門家が「危険です！」と説明。")
    t.speak("新聞で「対策が必要」と記事に。")
    t.speak("でも、みんなの心には響かなかった...")
    input("次のスライドに進むにはEnterを押してください...")
    
    print("=== スライド10: 問題点の整理 ===")
    t.speak("これって、実はとても勉強になる失敗例なんです！")
    time.sleep(1)
    t.speak("問題点を整理してみると...")
    time.sleep(1)
    t.speak("情報が一方通行で伝わりにくかった。")
    t.speak("人それぞれの理解度にバラつきが出た。")
    t.speak("みんなで「そうだね！」という共通理解を作るのが難しかった。")
    time.sleep(1)
    t.speak("でも、失敗があるからこそ、次はもっと上手くできるんです！")
    input("次のスライドに進むにはEnterを押してください...")
    
    print("=== スライド11: CI構想の登場 ===")
    t.speak("そこで登場するのが「CI構想」なんです！")
    time.sleep(2)
    input("次のスライドに進むにはEnterを押してください...")
    
    # === 第3部：CI構想 ===
    print("=== スライド12: 第3部タイトル ===")
    t.speak("第3部では、CI構想について詳しく説明します！")
    t.speak("人類の新しいチャレンジですよ！")
    input("次のスライドに進むにはEnterを押してください...")
    
    print("=== スライド13: 魔法の循環 ===")
    t.speak("CI構想の「魔法の循環」をご紹介します！")
    time.sleep(1)
    t.speak("これまでの失敗を踏まえて、")
    t.speak("今度はこんな風にやってみよう！っていうアイデアなんです。")
    input("次のスライドに進むにはEnterを押してください...")
    
    # 循環の各ステップ
    circulation_steps = [
        {
            "title": "1. 個人の発信",
            "explanation": [
                "まず1つ目は、個人の発信です。",
                "今度は、一人一人が自分の考えをちゃんと発信します。",
                "「わたしはこう思う」「こんな体験をした」",
                "みんなが参加型で情報を出し合うんです！"
            ]
        },
        {
            "title": "2. AIの学習",
            "explanation": [
                "2つ目は、AIの学習です。",
                "その内容をAIが上手に整理・学習してくれます。",
                "たくさんの人の考えが、きちんと蓄積されていきます。"
            ]
        },
        {
            "title": "3. AIによる応答",
            "explanation": [
                "3つ目は、AIによる応答です。",
                "誰かが質問すると、みんなの考えを踏まえてAIが応答。",
                "一人の専門家の意見じゃなくて、",
                "みんなの知恵が反映されるんです！"
            ]
        },
        {
            "title": "4. 理解の深化",
            "explanation": [
                "最後、4つ目は理解の深化です。",
                "その応答を見て、「あ、そういうことか！」って新しい理解が生まれる。",
                "そしてまた発信する...",
                "この循環が続くんです！"
            ]
        }
    ]
    
    for i, step in enumerate(circulation_steps, 14):
        print(f"=== スライド{i}: {step['title']} ===")
        for explanation in step["explanation"]:
            t.speak(explanation)
            time.sleep(0.8)
        input("次のスライドに進むにはEnterを押してください...")
    
    print("=== スライド18: ワクワクする結果 ===")
    t.speak("この循環で、今度こそ、みんなで一緒に賢くなれるんです！")
    time.sleep(1)
    t.speak("すごくワクワクしませんか？")
    input("次のスライドに進むにはEnterを押してください...")
    
    # === 第4部：修道25回生の新しい実験 ===
    print("=== スライド19: 第4部タイトル ===")
    t.speak("第4部では、修道25回生の新しい実験について話します！")
    t.speak("パイオニアとしての挑戦ですよ！")
    input("次のスライドに進むにはEnterを押してください...")
    
    part4_slides = [
        {
            "title": "人類の新しいチャレンジのパイオニア",
            "content": [
                "実は修道25回生では、この「人類の新しいチャレンジ」の",
                "パイオニアになろうとしているんです！",
                "具体的には、同期会の活動をAIが学習しやすい形で整理。",
                "このウェブサイトに体系的に記録。",
                "みんなの経験や知識を共有できる仕組み作り。"
            ]
        },
        {
            "title": "具体的には...",
            "content": [
                "例えば、「気楽に集まる会」での楽しい体験。",
                "定例同期会での真剣な議論。",
                "それぞれの人生で学んだこと。",
                "これらが蓄積されることで、",
                "「修道25回生の集団知性」が育っていくんです！"
            ]
        },
        {
            "title": "これって...",
            "content": [
                "これって、人類が次のステージに進むための",
                "とても大切な実験だと思いませんか？"
            ]
        }
    ]
    
    for i, slide in enumerate(part4_slides, 20):
        print(f"=== スライド{i}: {slide['title']} ===")
        for content in slide["content"]:
            t.speak(content)
            time.sleep(0.8)
        input("次のスライドに進むにはEnterを押してください...")
    
    # === 第5部：なぜこれが世界を変えるのか ===
    print("=== スライド23: 第5部タイトル ===")
    t.speak("第5部では、なぜこれが世界を変えるのかについて話しますね。")
    t.speak("修道の精神との関連もお話しします。")
    input("次のスライドに進むにはEnterを押してください...")
    
    part5_slides = [
        {
            "title": "修道高校の校歌、覚えていますよね？",
            "content": [
                "修道高校の校歌、覚えていますよね？",
                "「世の進運に先駆けん」です！",
                "CI構想は、まさにこの精神の新時代版なんです！"
            ]
        },
        {
            "title": "今度は先手を打つ！",
            "content": [
                "気候変動では、残念ながら人類は後手に回ってしまいました。",
                "でも、だからこそ今度は先手を打つんです！",
                "次の大きな課題では、今度こそみんなで協力できるようになる！"
            ]
        },
        {
            "title": "CI構想 - 新時代版の修道精神",
            "content": [
                "新しい技術（AI）を上手に使って、",
                "人間同士のつながりを深めて、",
                "今度こそみんなで協力できるようになる！",
                "今回の「ちょっと失敗しちゃった体験」を活かして、",
                "人類がもっと賢く、もっと協力上手になれるんです！"
            ]
        }
    ]
    
    for i, slide in enumerate(part5_slides, 24):
        print(f"=== スライド{i}: {slide['title']} ===")
        for content in slide["content"]:
            t.speak(content)
            time.sleep(0.8)
        input("次のスライドに進むにはEnterを押してください...")
    
    # === 第6部：あなたも一緒にチャレンジしませんか？ ===
    print("=== スライド27: 第6部タイトル ===")
    t.speak("第6部では、皆さんにお願いがあります！")
    t.speak("あなたも一緒にチャレンジしませんか？")
    input("次のスライドに進むにはEnterを押してください...")
    
    requests = [
        {
            "title": "1. 自分の考えを発信してください",
            "content": [
                "最後に、皆さんにお願いがあります！",
                "この面白い実験に、ぜひ参加してください。",
                "まず1つ目、自分の考えを発信してください。",
                "小さなことでも大丈夫！",
                "あなたの体験や気づきを、みんなとシェアしてください。",
                "それが人類の新しい知恵の一部になるんです！"
            ]
        },
        {
            "title": "2. AIを友達だと思って活用してください",
            "content": [
                "2つ目は、AIを友達だと思って活用してください。",
                "AIは怖いものじゃありません。",
                "あなたの理解を助けてくれる、頼もしいパートナーです。",
                "一緒に楽しく学んでいきましょう！"
            ]
        },
        {
            "title": "3. 人間らしさを大切にしてください",
            "content": [
                "3つ目は、人間らしさを大切にしてください。",
                "技術が進歩しても、人間の素晴らしさは変わりません。",
                "友情、思いやり、創造性...",
                "これらは私たちだけの特別な宝物です！"
            ]
        }
    ]
    
    for i, request in enumerate(requests, 28):
        print(f"=== スライド{i}: {request['title']} ===")
        for content in request["content"]:
            t.speak(content)
            time.sleep(0.8)
        input("次のスライドに進むにはEnterを押してください...")
    
    # === 結び ===
    conclusion_slides = [
        {
            "title": "結び：新しい時代の始まり",
            "content": [
                "CI構想を通じて、私たちは、",
                "個人として、もっと成長して、",
                "グループとして、もっと賢くなって、",
                "社会全体に、素敵な貢献をしていく。"
            ]
        },
        {
            "title": "次の大きなチャレンジでは...",
            "content": [
                "気候変動では後手に回ってしまった人類ですが、",
                "今度こそ、次の大きなチャレンジでは",
                "みんなで力を合わせて素晴らしい結果を出せるはず！"
            ]
        },
        {
            "title": "修道25回生への期待",
            "content": [
                "修道25回生の皆さんが、その新時代のパイオニアとして",
                "活躍してくださることを、心から楽しみにしています！"
            ]
        },
        {
            "title": "人類の新しいチャレンジ",
            "content": [
                "人類の新しいチャレンジ、一緒に頑張りましょう！"
            ]
        }
    ]
    
    for i, slide in enumerate(conclusion_slides, 31):
        print(f"=== スライド{i}: {slide['title']} ===")
        for content in slide["content"]:
            t.speak(content)
            time.sleep(0.8)
        input("次のスライドに進むにはEnterを押してください...")
    
    # === 終了 ===
    print("=== スライド35: ありがとうございました！ ===")
    t.speak("今日はありがとうございました！")
    t.speak("ご清聴ありがとうございました！")
    t.speak("何かご質問があれば、お気軽にどうぞ！")
    
    print()
    print("=== プレゼンテーション終了 ===")
    print("お疲れさまでした！")

if __name__ == "__main__":
    print("CI構想プレゼンテーション - さとうささら音声合成版")
    print("========================================")
    print()
    
    try:
        ci_presentation()
    except KeyboardInterrupt:
        print("\nプレゼンテーションを中断しました。")
    except Exception as e:
        print(f"エラーが発生しました: {e}")
        print("CeVIOやCeVIOPyライブラリの設定を確認してください。")